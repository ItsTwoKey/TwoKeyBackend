# Generated by Django 4.2.6 on 2024-02-16 08:44

import django.contrib.gis.db.models.fields
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('logic', '__first__'),
    ]

    operations = [
        migrations.CreateModel(
            name='Buckets',
            fields=[
                ('id', models.TextField(primary_key=True, serialize=False)),
                ('name', models.TextField(unique=True)),
                ('owner', models.UUIDField(blank=True, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('public', models.BooleanField(blank=True, null=True)),
                ('avif_autodetection', models.BooleanField(blank=True, null=True)),
                ('file_size_limit', models.BigIntegerField(blank=True, null=True)),
                ('allowed_mime_types', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'storage"."buckets',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Objects',
            fields=[
                ('id', models.UUIDField(primary_key=True, serialize=False)),
                ('name', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('last_accessed_at', models.DateTimeField(blank=True, null=True)),
                ('metadata', models.JSONField(blank=True, null=True)),
                ('path_tokens', models.TextField(blank=True, null=True)),
                ('version', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'storage"."objects',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AllowedLocations',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
                ('location_point', django.contrib.gis.db.models.fields.PointField(srid=4326)),
                ('address_info', models.JSONField(default=dict)),
                ('org', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='logic.organizations')),
            ],
            options={
                'db_table': 'allowed_locations',
            },
        ),
        migrations.CreateModel(
            name='SharedFiles',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('expiration_time', models.BigIntegerField()),
                ('last_modified_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('signed_url', models.URLField(default='')),
                ('state', models.CharField(default='active')),
                ('file', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='fileoperations.objects')),
                ('shared_with', models.ManyToManyField(related_name='shared_files', to='logic.userinfo')),
            ],
            options={
                'db_table': 'shared_files',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='SecCheck',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('download_enabled', models.BooleanField(default=False)),
                ('unique_identifiers', models.BooleanField(default=False)),
                ('geo_enabled', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='fileoperations.allowedlocations')),
                ('shared', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='security_check', to='fileoperations.sharedfiles')),
            ],
            options={
                'db_table': 'security_checks',
            },
        ),
        migrations.CreateModel(
            name='File_Info',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('depts', models.ManyToManyField(to='logic.departments')),
                ('file', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='file_info', to='fileoperations.objects')),
                ('org', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='logic.organizations')),
            ],
            options={
                'db_table': 'file_info',
            },
        ),
        migrations.CreateModel(
            name='AccessLog',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('user', models.UUIDField()),
                ('username', models.CharField(default='', max_length=100)),
                ('user_email', models.EmailField(default='', max_length=254)),
                ('profile_pic', models.CharField(default='')),
                ('file', models.UUIDField()),
                ('file_name', models.CharField(default='', max_length=500)),
                ('event', models.CharField(default='')),
                ('timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('org', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='logic.organizations')),
            ],
            options={
                'db_table': 'access_log',
            },
        ),
    ]
