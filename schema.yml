openapi: 3.0.3
info:
  title: TwoKey API
  version: 1.0.0
paths:
  /dept/createDepts:
    post:
      operationId: dept_createDepts_create
      tags:
      - dept
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Department'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Department'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Department'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Department'
          description: ''
  /dept/deleteDept/{id}:
    delete:
      operationId: dept_deleteDept_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
          pattern: ^[\w-]*$
        required: true
      tags:
      - dept
      responses:
        '204':
          description: No response body
  /dept/listDepts:
    get:
      operationId: dept_listDepts_retrieve
      tags:
      - dept
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Department'
          description: ''
  /dept/updateDept/{id}:
    put:
      operationId: dept_updateDept_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          pattern: ^[\w-]*$
        required: true
      tags:
      - dept
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Department'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Department'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Department'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Department'
          description: ''
  /file/addDepartment/{file}:
    post:
      operationId: file_addDepartment_create
      parameters:
      - in: path
        name: file
        schema:
          type: string
          pattern: ^[\w-]*$
        required: true
      tags:
      - file
      responses:
        '200':
          description: No response body
  /file/createLocation:
    post:
      operationId: file_createLocation_create
      tags:
      - file
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AllowedLocation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AllowedLocation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AllowedLocation'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllowedLocation'
          description: ''
  /file/deleteLocation/{id}:
    delete:
      operationId: file_deleteLocation_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
          pattern: ^[\w-]*$
        required: true
      tags:
      - file
      responses:
        '204':
          description: No response body
  /file/deleteShare/{file}:
    delete:
      operationId: file_deleteShare_destroy
      parameters:
      - in: path
        name: file
        schema:
          type: string
          pattern: ^[\w-]*$
        required: true
      tags:
      - file
      responses:
        '204':
          description: No response body
  /file/editShare/{file}:
    put:
      operationId: file_editShare_update
      parameters:
      - in: path
        name: file
        schema:
          type: string
          pattern: ^[\w-]*$
        required: true
      tags:
      - file
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SharedFile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SharedFile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SharedFile'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SharedFile'
          description: ''
  /file/files/{dept}:
    get:
      operationId: file_files_list
      parameters:
      - in: path
        name: dept
        schema:
          type: string
          pattern: ^[\w-]*$
        required: true
      tags:
      - file
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/File'
          description: ''
  /file/getLogs/{file}:
    get:
      operationId: file_getLogs_retrieve
      parameters:
      - in: path
        name: file
        schema:
          type: string
          pattern: ^[\w-]*$
        required: true
      tags:
      - file
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessLog'
          description: ''
  /file/getPresigned/{file}:
    post:
      operationId: file_getPresigned_create
      parameters:
      - in: path
        name: file
        schema:
          type: string
          pattern: ^[\w-]*$
        required: true
      tags:
      - file
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SharedFilesRecepient'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SharedFilesRecepient'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SharedFilesRecepient'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SharedFilesRecepient'
          description: ''
  /file/listLocation:
    get:
      operationId: file_listLocation_retrieve
      tags:
      - file
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllowedLocation'
          description: ''
  /file/logEvent/{file}:
    get:
      operationId: file_logEvent_retrieve
      parameters:
      - in: path
        name: file
        schema:
          type: string
          pattern: ^[\w-]*$
        required: true
      tags:
      - file
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessLog'
          description: ''
  /file/shareFile:
    post:
      operationId: file_shareFile_create
      tags:
      - file
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SharedFile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SharedFile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SharedFile'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SharedFile'
          description: ''
  /file/sharedFileInfo/{file}:
    get:
      operationId: file_sharedFileInfo_retrieve
      parameters:
      - in: path
        name: file
        schema:
          type: string
          pattern: ^[\w-]*$
        required: true
      tags:
      - file
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SharedFile'
          description: ''
  /file/updateLocation/{id}:
    put:
      operationId: file_updateLocation_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          pattern: ^[\w-]*$
        required: true
      tags:
      - file
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AllowedLocation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AllowedLocation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AllowedLocation'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllowedLocation'
          description: ''
  /org/createOrgs:
    post:
      operationId: org_createOrgs_create
      tags:
      - org
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Organization'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Organization'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Organization'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
          description: ''
  /org/list_orgs:
    get:
      operationId: org_list_orgs_retrieve
      tags:
      - org
      security:
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
          description: ''
  /role/createRoles:
    post:
      operationId: role_createRoles_create
      tags:
      - role
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Role'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Role'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Role'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
          description: ''
  /role/deleteRoles/{id}:
    delete:
      operationId: role_deleteRoles_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - role
      responses:
        '204':
          description: No response body
  /role/listRoles:
    get:
      operationId: role_listRoles_retrieve
      tags:
      - role
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
          description: ''
  /role/updateRoles/{id}:
    put:
      operationId: role_updateRoles_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - role
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Role'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Role'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Role'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
          description: ''
  /users/deleteUser/{id}:
    delete:
      operationId: users_deleteUser_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
          pattern: ^[\w-]*$
        required: true
      tags:
      - users
      responses:
        '204':
          description: No response body
  /users/elevate/{id}:
    put:
      operationId: users_elevate_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AUserInfo'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AUserInfo'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AUserInfo'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AUserInfo'
          description: ''
  /users/getProfileInfo:
    get:
      operationId: users_getProfileInfo_retrieve
      tags:
      - users
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NUserInfo'
          description: ''
  /users/getUserInfo/{id}:
    get:
      operationId: users_getUserInfo_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          pattern: ^[\w-]*$
        required: true
      tags:
      - users
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AUserInfo'
          description: ''
  /users/invite:
    post:
      operationId: users_invite_create
      tags:
      - users
      responses:
        '200':
          description: No response body
  /users/invites/pending:
    get:
      operationId: users_invites_pending_retrieve
      tags:
      - users
      responses:
        '200':
          description: No response body
  /users/list_users/{dept}:
    get:
      operationId: users_list_users_retrieve
      parameters:
      - in: path
        name: dept
        schema:
          type: string
          pattern: ^[\w-]*$
        required: true
      tags:
      - users
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AUserInfo'
          description: ''
  /users/updateProfile:
    put:
      operationId: users_updateProfile_update
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NUserInfo'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/NUserInfo'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/NUserInfo'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NUserInfo'
          description: ''
components:
  schemas:
    AUserInfo:
      type: object
      properties:
        id:
          type: string
          format: uuid
        dept:
          type: string
          format: uuid
        manager:
          type: string
          format: uuid
          nullable: true
        role_priv:
          type: string
          maxLength: 20
        is_approved:
          type: boolean
        is_active:
          type: boolean
      required:
      - id
    AccessLog:
      type: object
      properties:
        user:
          type: string
          format: uuid
        username:
          type: string
          maxLength: 100
        user_email:
          type: string
          format: email
          maxLength: 254
        profile_pic:
          type: string
        file:
          type: string
          format: uuid
        file_name:
          type: string
          maxLength: 500
        event:
          type: string
        org:
          type: string
          format: uuid
          nullable: true
      required:
      - file
      - user
    AllowedLocation:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/GisFeatureEnum'
        geometry:
          type: object
          properties:
            type:
              type: string
              enum:
              - Point
            coordinates:
              type: array
              items:
                type: number
                format: float
              example:
              - 12.9721
              - 77.5933
              minItems: 2
              maxItems: 3
        properties:
          type: object
          properties:
            name:
              type: string
              maxLength: 50
            address_info:
              type: object
              additionalProperties: {}
    Department:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          nullable: true
        metadata:
          type: object
          additionalProperties: {}
          nullable: true
    File:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          nullable: true
        metadata:
          type: object
          additionalProperties: {}
          nullable: true
        file_info:
          type: array
          items:
            $ref: '#/components/schemas/FileMeta'
          readOnly: true
        profile_pic:
          type: string
          readOnly: true
      required:
      - file_info
      - id
      - profile_pic
    FileMeta:
      type: object
      properties:
        depts:
          type: array
          items:
            $ref: '#/components/schemas/Department'
      required:
      - depts
    GisFeatureEnum:
      type: string
      enum:
      - Feature
    NUserInfo:
      type: object
      properties:
        id:
          type: string
          format: uuid
        username:
          type: string
          nullable: true
        name:
          type: string
        last_name:
          type: string
        email:
          type: string
          format: email
          maxLength: 254
        phone:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
          nullable: true
        profile_pic:
          type: string
          format: uri
          nullable: true
          maxLength: 200
        country:
          type: string
          maxLength: 30
        state:
          type: string
          maxLength: 30
        city:
          type: string
          maxLength: 30
        postal_code:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        is_active:
          type: boolean
        dept:
          type: string
          format: uuid
        manager:
          type: string
          format: uuid
          nullable: true
      required:
      - id
    Organization:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          nullable: true
    Role:
      type: object
      properties:
        id:
          type: string
          format: uuid
        role:
          type: string
          maxLength: 20
      required:
      - role
    SecCheck:
      type: object
      properties:
        download_enabled:
          type: boolean
        geo_enabled:
          type: string
          format: uuid
          nullable: true
        unique_identifiers:
          type: boolean
    SharedFile:
      type: object
      properties:
        file:
          type: string
          format: uuid
        owner:
          type: string
          readOnly: true
        file_name:
          type: string
          readOnly: true
        last_updated:
          type: string
          readOnly: true
        shared_with:
          type: array
          items:
            type: string
            format: uuid
          writeOnly: true
        expiration_time:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
        security_check:
          $ref: '#/components/schemas/SecCheck'
      required:
      - expiration_time
      - file
      - file_name
      - last_updated
      - owner
      - security_check
      - shared_with
    SharedFilesRecepient:
      type: object
      properties:
        id:
          type: string
          format: uuid
        signed_url:
          type: string
          format: uri
          maxLength: 200
