openapi: 3.0.3
info:
  title: TwoKey API
  version: 1.0.0
paths:
  /dept/create_depts/:
    post:
      operationId: dept_create_depts_create
      tags:
      - dept
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Department'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Department'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Department'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Department'
          description: ''
  /dept/list_depts/:
    get:
      operationId: dept_list_depts_retrieve
      tags:
      - dept
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Department'
          description: ''
  /file/delete_share/{file}:
    delete:
      operationId: file_delete_share_destroy
      parameters:
      - in: path
        name: file
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - file
      responses:
        '204':
          description: No response body
  /file/files/:
    get:
      operationId: file_files_list
      tags:
      - file
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/File'
          description: ''
  /file/get_presigned/{file}:
    get:
      operationId: file_get_presigned_retrieve
      parameters:
      - in: path
        name: file
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - file
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SharedFilesRecepient'
          description: ''
  /file/share_file/:
    post:
      operationId: file_share_file_create
      tags:
      - file
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SharedFile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SharedFile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SharedFile'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SharedFile'
          description: ''
  /file/shared_file_info/{file}:
    get:
      operationId: file_shared_file_info_retrieve
      parameters:
      - in: path
        name: file
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - file
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SharedFile'
          description: ''
  /org/create_orgs/:
    post:
      operationId: org_create_orgs_create
      tags:
      - org
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Organization'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Organization'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Organization'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
          description: ''
  /org/list_orgs/:
    get:
      operationId: org_list_orgs_retrieve
      tags:
      - org
      security:
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
          description: ''
  /role/create_roles/:
    post:
      operationId: role_create_roles_create
      tags:
      - role
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Role'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Role'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Role'
        required: true
      security:
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
          description: ''
  /role/delete_roles/{id}:
    delete:
      operationId: role_delete_roles_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - role
      security:
      - {}
      responses:
        '204':
          description: No response body
  /role/list_roles/:
    get:
      operationId: role_list_roles_retrieve
      tags:
      - role
      security:
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
          description: ''
  /role/update_roles/{id}:
    put:
      operationId: role_update_roles_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - role
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Role'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Role'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Role'
        required: true
      security:
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
          description: ''
  /users/elevate/{id}:
    put:
      operationId: users_elevate_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserInfo'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserInfo'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserInfo'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserInfo'
          description: ''
  /users/list_users/:
    get:
      operationId: users_list_users_retrieve
      tags:
      - users
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserInfo'
          description: ''
components:
  schemas:
    Department:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          nullable: true
    File:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          nullable: true
        org_name:
          type: string
          readOnly: true
        dept_name:
          type: string
          readOnly: true
      required:
      - dept_name
      - id
      - org_name
    Organization:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          nullable: true
    Role:
      type: object
      properties:
        id:
          type: string
          format: uuid
        role:
          type: string
          maxLength: 20
      required:
      - role
    SharedFile:
      type: object
      properties:
        file:
          type: string
          format: uuid
        file_name:
          type: string
          readOnly: true
        shared_with:
          type: array
          items:
            type: string
            format: email
          writeOnly: true
        expiration_time:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
      required:
      - file
      - file_name
      - shared_with
    SharedFilesRecepient:
      type: object
      properties:
        id:
          type: string
          format: uuid
        signed_url:
          type: string
          format: uri
          maxLength: 200
    UserInfo:
      type: object
      properties:
        id:
          type: string
          format: uuid
        email:
          type: string
          format: email
          maxLength: 254
        dept:
          type: string
          format: uuid
        role_priv:
          type: string
          maxLength: 20
        is_approved:
          type: boolean
      required:
      - id
